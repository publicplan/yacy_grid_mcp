# YaCy Grid Peer configuration

# the default port of this peer
port = 8100

# if we don't force the port to be used, the peer may use alternative port numbers on it's own
port.force = false

# the grid name is used to separate different grid networks.
# Only networks with the same name connect with each other
grid.name = freeworld

# the access point to the mcp. These are necessary to make it possible that the
# microservices find each other several addresses can be used.
# If the primary address in this list is not used, fail-over addresses are attempted
grid.mcp.address = 
# the mcp itself does not require an mcp address. Other grid component might have the following definition:
# 127.0.0.1:8100,brain.local:8100,node00.local:8100,searchlab.eu:8100

# the ftp service for a primary mcp. This value is only valid, if the local mcp does not connect to another one
grid.ftp.address = admin:admin@127.0.0.1:2121,admin:admin@brain.local:2121,admin:admin@node00.local:2121,admin:admin@searchlab.eu:2121
grid.ftp.active = true

# the broker service for a primary mcp.
# we use either a local one, one installed on a local grid or the broker at searchlab.eu
grid.broker.address = anonymous:yacy@127.0.0.1:5672,anonymous:yacy@brain.local:5672,anonymous:yacy@node00.local:5672,anonymous:yacy@searchlab.eu:5672

# use lazy queues: for rabbitMQ this means, that lazy queues do not use any memory cache
grid.broker.lazy = true

# auto acknowledge queues
grid.broker.autoAck = false

# limitation and throttling:
# A limit is the maximum number of entries that a queue may take. This is a configuration which is passed to
# the RabbitMQ queue initialization. If the limit is set to 0, it means no limitation.
# In case that a target queue reaches it's maximum, it will reject new entries, followed by a requeueing of already dequeued messages
# of origin queues.
grid.broker.queue.limit = 0
# A throttling is a care-taking of the maximum number of entries in target queues. If the sum of all entries in target queues
# is approaching the throttling number, reading from the origin queues is throttled (= pauses are made, processes act slower).
# Queue limit numbers cannot be compared with trottling numbers, because queue limits denote absolute numbers of one queue
# while throttling numbers denote the sum of all entries in target queues. It should hold:
#     throttling < limit * number-of-target-queues
# But as long as throttling >= limit it could happen that a queue reaches it's limit before throttling starts. To be save, set
#     throttling < limit
# A throttling of 0 means no throttling.
grid.broker.queue.throttling = 100000

# assets: local asset store. if delete is true, then assets are deleted as soon as a read process has accessed the asset
grid.assets.delete = true

# the address of the elasticsearch transport client instance(s)
grid.elasticsearch.address = 127.0.0.1:9300,brain.local:9300,node01.local:9300,node02.local:9300,node03.local:9300,node04.local:9300,yacygrid.com:9300,searchlab.eu:9300
grid.elasticsearch.clusterName = elasticsearch

